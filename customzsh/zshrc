#!/usr/bin/env zsh

# http://zsh.sourceforge.net/Guide/zshguide02.html
# zmodload zsh/zprof # command time  zsh -i -c exit

if [[ -o login ]]; then
	# Load the env setting and paths and some:
	for file in ~/.{zexports,zpaths,zaliases,functions,private}; do
		[ -r "$file" ] && [ -f "$file" ] && source "$file";
	done;

	neofetch # neofetch
fi

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# antibody
source ~/dotfiles/customzsh/zsh_plugins.sh

################ zsh options
# add color
autoload colors
colors

setopt append_history
setopt extended_history
#setopt hist_expire_dups_first # expire duplicates first
setopt hist_ignore_dups # do not store duplications
setopt hist_find_no_dups # ignore duplicates when searching
setopt hist_ignore_space # Remove command lines from the history list when the first character on the line is a space,
setopt hist_reduce_blanks # removes blank lines from history
setopt hist_save_no_dups # Don't to save duplicated lines more than once
#setopt inc_append_history # adds commands as they are typed, not at shell exit
setopt share_history # share history across multiple zsh sessions

# Changing directories
setopt auto_cd
setopt auto_pushd
setopt pushd_ignore_dups

# Completion
setopt auto_list # automatically list choices on ambiguous completion
setopt auto_menu # automatically use menu completion
setopt always_to_end # move cursor to end if word had one match
setopt complete_in_word
setopt menu_complete
setopt list_types #  When listing files that are possible completions, show the type of each file with a trailing identifying mark.
setopt auto_param_keys #  If a parameter name was completed and the next character typed is one of those that have to come directly after the name (like }, :, etc.), they are placed there automatically.

zstyle ':completion:*:*:*:*:*' menu select
#zstyle ':completion:*' matcher-list 'm:{a-zA-Z-_}={A-Za-z_-}' 'r:|=*' 'l:|=* r:|=*'
# Make completion:
# (stolen from Wincent)
# - Try exact (case-sensitive) match first.
# - Then fall back to case-insensitive.
# - Accept abbreviations after . or _ or - (ie. f.b -> foo.bar).
# - Substring complete (ie. bar -> foobar).
zstyle ':completion:*' matcher-list '' '+m:{[:lower:]}={[:upper:]}' '+m:{[:upper:]}={[:lower:]}' '+m:{_-}={-_}' 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'
zstyle ':completion::complete:*' use-cache 1
zstyle ':completion::complete:*' cache-path $ZSH_CACHE_DIR
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#) ([0-9a-z-]#)*=01;34=0=01'
zstyle ':completion:*:*files' ignored-patterns '*?.o' '*?~' '*\#'
zstyle ':completion:*:cd:*' tag-order local-directories path-directories
zstyle ':completion:*:cd:*' ignore-parents parent pwd
zstyle ':completion:*' group-name '' # Categorize completion suggestions with headings:
zstyle ':completion:*' format %F{yellow}%B%U%{$__DOTS[ITALIC_ON]%}%d%{$__DOTS[ITALIC_OFF]%}%b%u%f # Style the group names

# Other
setopt prompt_subst
setopt auto_param_slash # If a parameter is completed whose content is the name of a directory, then add a trailing slash.
setopt mark_dirs # Append a trailing / to all directory names resulting from filename generation (globbing).
setopt correct_all # autocorrect commands

# no beep
setopt nolistbeep
setopt nobeep

################ Manpage
man() {
    LESS_TERMCAP_md=$'\e[01;31m' \
    LESS_TERMCAP_me=$'\e[0m' \
    LESS_TERMCAP_se=$'\e[0m' \
    LESS_TERMCAP_so=$'\e[01;44;33m' \
    LESS_TERMCAP_ue=$'\e[0m' \
    LESS_TERMCAP_us=$'\e[01;32m' \
    command man "$@"
}

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

################ Command line keybinding
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down

# Emacs binding
bindkey -e

# bind the Control-P/N keys for use in EMACS mode
bindkey -M emacs '^P' history-substring-search-up
bindkey -M emacs '^N' history-substring-search-down

# # Vi with some Emacs flavor control keys.
# bindkey -v
# export KEYTIMEOUT=1

# bindkey "^A" beginning-of-line
# bindkey "^E" end-of-line
# bindkey "^K" kill-line
# bindkey "^L" clear-screen
# bindkey "^R" history-incremental-search-backward
# bindkey "^U" kill-whole-line
# bindkey "^W" backward-kill-word
# bindkey "^Y" yank

# # Use vim keys in tab complete menu
# bindkey -M menuselect 'h' vi-backward-char
# bindkey -M menuselect 'j' vi-down-line-or-history
# bindkey -M menuselect 'k' vi-up-line-or-history
# bindkey -M menuselect 'l' vi-forward-char
# bindkey -v '^?' backward-delete-char

# # bind the k and j keys for use in VI mode
# bindkey -M vicmd 'k' history-substring-search-up
# bindkey -M vicmd 'j' history-substring-search-down

# # 'v' in visual mode opens VIM to edit the command in a full editor.
# autoload -U edit-command-line
# zle -N edit-command-line
# bindkey -M vicmd v edit-command-line

################ Misc.
# z.lua after source ~/.fzf.zsh
eval "$(lua ~/Library/Caches/Homebrew/z.lua--git/z.lua --init zsh enhanced once fzf)"

# direnv
eval "$(direnv hook zsh)"

################ Completions & corrections
[[ -n $ASDF_DIR ]] && fpath=($ASDF_DIR/completions(-/) $fpath)
fpath=(~/.local/completions(-/) $fpath)

autoload -Uz compinit
compinit

# Bash completions
autoload -Uz bashcompinit; bashcompinit

# tabtab source for packages
# uninstall by removing these lines
[[ -f ~/.config/tabtab/zsh/__tabtab.zsh ]] && . ~/.config/tabtab/zsh/__tabtab.zsh || true

# pipx must be after autoload -Uz bashcompinit; bashcompinit
eval "$(register-python-argcomplete pipx)"

# thefuck
eval $(thefuck --alias)

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

################ Java
# When using asdf-vm, set JAVA_HOME
[[ -f ~/.asdf/plugins/java/set-java-home.zsh ]] && . ~/.asdf/plugins/java/set-java-home.zsh

#zprof
